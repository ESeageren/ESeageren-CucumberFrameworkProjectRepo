package steps;

import io.cucumber.java.PendingException;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;
import org.junit.Assert;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;

import static utils.CommonMethods.driver;
import static utils.PageInitializer.addEmployeePage;

public class AddEmployeeSteps {

    @Given("admin user is on the Add Employee page")
    public void admin_user_is_on_the_add_employee_page() {
        driver.get("https://your-hrms-url.com/addEmployee");
        Assert.assertTrue(addEmployeePage.firstNameLoc.isDisplayed());
    }

    @When("admin enters first name {string} and middle name {string} and last name {string}")
    public void admin_enters_first_name_and_middle_name_and_last_name(String string, String string2, String string3) {
        addEmployeePage.firstNameLoc.clear();
        addEmployeePage.firstNameLoc.sendKeys(firstName);

        addEmployeePage.middleNameLoc.clear();
        addEmployeePage.middleNameLoc.sendKeys(middleName);

        addEmployeePage.lastNameLoc.clear();
        addEmployeePage.lastNameLoc.sendKeys(lastName);
    }

    @When("admin leaves the employee ID field blank")
    public void admin_leaves_the_employee_id_field_blank() {
        WebElement employeeIdField = driver.findElement(By.id("employeeId"));
        employeeIdField.clear();
    }

    @When("admin clicks the Save button")
    public void admin_clicks_the_save_button() {
        addEmployeePage.saveButton.click();
    }

    @Then("employee should be added successfully with a system-generated employee ID")
    public void employee_should_be_added_successfully_with_a_system_generated_employee_id() {
        WebElement generatedId = driver.findElement(By.id("employeeId"));  // adjust if this changes post-save
        String autoGeneratedId = generatedId.getAttribute("value");
        Assert.assertFalse(autoGeneratedId.isEmpty());
        System.out.println("Auto-generated employee ID: " + autoGeneratedId);
    }

    @When("admin enters employee ID {string}")
    public void admin_enters_employee_id(String string) {
        // Write code here that turns the phrase above into concrete actions
        throw new PendingException();
    }

    @Then("employee should be added successfully with employee ID {string}")
    public void employee_should_be_added_successfully_with_employee_id(String string) {
        WebElement employeeIdField = driver.findElement(By.id("employeeId"));
        String actualId = employeeIdField.getAttribute("value");
        Assert.assertEquals(expectedId, actualId);
        System.out.println("Employee added with ID: " + actualId);
    }

    @Then("user should see the message {string}")
    public void user_should_see_the_message(String string) {
        WebElement errorMsg = driver.findElement(By.cssSelector(".error-message")); // adjust selector as needed
        String actualMessage = errorMsg.getText().trim();
        Assert.assertEquals(expectedMessage, actualMessage);
        System.out.println("Displayed error message: " + actualMessage);
    }

}
